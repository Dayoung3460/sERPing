<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beauty1nside.bsn.mapper.BsnCsMapper">
    
<!-- 교환및반품 조회 -->
	<select id="selectBhfReturningList" resultType="BhfReturnListDTO" parameterType="BhfReturnListSearchDTO">
		select returning_code, 
		       branch_office_id,
			   request_date, 
			   progress_status, 
			   return_remark
		from ( SELECT ROW_NUMBER() OVER (
                         ORDER BY TO_NUMBER(REGEXP_SUBSTR(returning_code, '\d+')) desc
                      ) AS RN,
					  returning_code, 
					  branch_office_id,
					  request_date, 
					  progress_status, 
					  return_remark
		from  bhf_returning
		
	    WHERE <include refid="searchInfo"></include>
		)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 페이징에 전체숫자 알려주기 위해서 -->
	<select id="countBhfReturningList" parameterType="BhfReturnListSearchDTO">
		SELECT COUNT(returning_code)
		FROM bhf_returning
		<where>
			<include refid="searchInfo"></include>
		</where>
	</select>
	
	<!-- 검색조건(검색을 안하면 그냥 조회가 되게), 신청만 조회 -->
	<sql id="searchInfo">
		company_num = #{companyNum}
		<if test="progressStatus != null and ! progressStatus.equals('')">
			AND progress_status = #{progressStatus}
		</if>
		<if test="requestDate != null and ! requestDate.equals('')">
			AND TO_CHAR(request_date, 'yyyy-mm-dd') = #{requestDate}
		</if>
		<if test="branchOfficeId != null and ! branchOfficeId.equals('')">
			AND branch_office_id LIKE '%' || #{branchOfficeId} || '%'
		</if>
	</sql>
	
	
	<!-- 교환및반품 상세 조회 -->
	<select id="selectBhfReturningDetail" resultType="BsnReturnListDTO" parameterType="BhfReturnListSearchDTO">
		select returning_detail_code,
		       goods_name, 
		       goods_code,
			   option_name, 
			   option_code,
			   quantity, 
			   exchange_returning_choice, 
			   returning_reason,
			   option_barcode,
			   goods_lot_num
		from (select /*+INDEX_DESC(bhf_returning_detail pk_bhf_returning_detail)*/
					 rownum rn, 
					 returning_detail_code,
					 goods_name, 
					 goods_code,
				     option_name, 
				     option_code,
				     quantity, 
				     exchange_returning_choice, 
				     returning_reason,
				     option_barcode,
			         goods_lot_num
			 from    bhf_returning_detail
			 
		<![CDATA[
			where rownum <= #{end}
		]]>
			and returning_code = #{returningCode} 
			)
		where rn >= #{start}
	</select>
	
	<select id="selectBsnCsReturningDetail" resultType="BsnCsReturningDetailDTO">
		SELECT CS_RETURNING_GOODS_ID ,
			   RETURNING_CODE ,
			   RETURNING_DETAIL_CODE ,
			   GOODS_CODE ,
			   GOODS_NAME ,
			   OPTION_CODE ,
			   OPTION_NAME ,
			   OPTION_BARCODE ,
			   RETURNING_QNT ,
			   WAREHOUSING_QNT ,
			   DISUSE_QNT ,
			   WAREHOUSE_ID ,
			   EMPLOYEE_NUM ,
			   COMPANY_NUM ,
			   EXCHANGE_RETURNING_CHOICE ,
		   	   GOODS_LOT_NUM ,
			   COMPLETION_DATE ,
			   RETURNING_REASON 
		FROM(
			SELECT ROW_NUMBER() OVER (
	                 ORDER BY TO_NUMBER(REGEXP_SUBSTR(CS_RETURNING_GOODS_ID, '\d+')) desc
	               ) AS RN,
				   CS_RETURNING_GOODS_ID ,
				   RETURNING_CODE ,
				   RETURNING_DETAIL_CODE ,
				   GOODS_CODE ,
				   GOODS_NAME ,
				   OPTION_CODE ,
				   OPTION_NAME ,
				   OPTION_BARCODE ,
				   RETURNING_QNT ,
				   WAREHOUSING_QNT ,
				   DISUSE_QNT ,
				   WAREHOUSE_ID ,
				   EMPLOYEE_NUM ,
				   COMPANY_NUM ,
				   EXCHANGE_RETURNING_CHOICE ,
			   	   GOODS_LOT_NUM ,
				   COMPLETION_DATE ,
				   RETURNING_REASON 
			FROM bsn_cs_returning_goods
			WHERE RETURNING_CODE = #{returningCode}
			
		)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
	<select id="countBsnCsReturningDetail">
			SELECT COUNT(*)
			FROM   bsn_cs_returning_goods
			WHERE  RETURNING_CODE = #{returningCode}
	</select>
	
	<insert id="insertBsnCSReturningGoods" statementType="CALLABLE">
	    call Bsn_Returning_Register(#{companyNum}, 
	                                #{employeeNum},
	                                #{branchOfficeId},
	                                #{returningCode},
	                                #{returningDetailData, typeHandler=com.beauty1nside.bsn.BsnReturningDtlArrayTypeHandler},
	                                #{exchangeList, typeHandler=com.beauty1nside.bsn.BsnReturningDtlArrayTypeHandler},
	                                #{warehousingList, typeHandler=com.beauty1nside.bsn.BsnReturningDtlArrayTypeHandler}
	    )
	</insert>
	
	<update id="cancelBsnCSReturningGoods">
		UPDATE bhf_returning
		SET    progress_status='취소', return_remark=#{returnRemark}
		WHERE  returning_code = #{returningCode}
	</update>
	
	

</mapper>