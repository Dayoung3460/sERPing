<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beauty1nside.bsn.mapper.BsnOrderMapper">

<!-- 출고 목록 조회(준비중만) -->
<select id="selectBsnDelivery">
SELECT 
       delivery_id, 
       order_id,
       delivery_date,
       employee_num,
       employee_name,
       delivery_status,
       remark,
       company_num,
   --    bo.order_code,
       order_name,
       branch_office_id,
       order_date,
       due_date
FROM
(
SELECT ROW_NUMBER() OVER (
              ORDER BY TO_NUMBER(REGEXP_SUBSTR(bd.delivery_id, '\d+')) desc
       ) AS RN,
       bd.delivery_id, 
       bd.order_id,
       bd.delivery_date,
       bd.employee_num,
       he.employee_name,
       bd.delivery_status,
       bd.remark,
       bd.company_num,
   --    bo.order_code,
       bo.order_name,
       bo.branch_office_id,
       bo.order_date,
       bo.due_date

FROM bsn_delivery bd
LEFT JOIN bsn_order bo ON bd.order_id = bo.order_id
LEFT JOIN hr_employee he ON bd.employee_num = he.employee_num
WHERE bd.company_num = #{companyNum}
<include refid="searchInfoBsnDLV"></include>
)
WHERE RN BETWEEN #{start} AND #{end}

</select>

<!-- 출고 목록 수량(준비중만) -->
<select id="getCountBsnDelivery">
SELECT COUNT(*)
FROM bsn_delivery bd
JOIN bsn_order bo ON bo.order_id = bd.order_id
WHERE bd.company_num = #{companyNum}
<include refid="searchInfoBsnDLV"></include>

</select>

<!-- 출고 상세 목록-->
<select id="selectBsnDeliveryDetail"  parameterType="BsnDeliveryDTO">
SELECT 
delivery_detail_id,
delivery_id,
order_detail_id,
option_code,
delivery_demand_qnt,
delivery_total_qnt,
sufficiency_status,
option_barcode,
goods_name,
option_name,
goods_standard
FROM
(
SELECT /*+ INDEX_ASC(bsn_delivery_detail PK_bsn_delivery_detail) */
ROWNUM rn,
bdd.delivery_detail_id,
bdd.delivery_id,
bdd.order_detail_id,
bdd.option_code,
bdd.delivery_demand_qnt,
bdd.delivery_total_qnt,
bdd.sufficiency_status,
bdd.option_barcode,
bod.goods_name,
bod.option_name,
bdd.goods_standard

FROM bsn_delivery_detail bdd
LEFT JOIN bsn_order_detail bod ON bdd.order_detail_id = bod.order_detail_id
WHERE bdd.delivery_id = #{deliveryId}
)
WHERE RN BETWEEN #{start} AND #{end}

</select>

<!-- 출고 상세 목록 수량-->
<select id="getCountBsnDeliveryDetail"  parameterType="BsnDeliveryDTO">
SELECT COUNT(delivery_detail_id)
FROM bsn_delivery_detail
WHERE delivery_id = #{deliveryId}
</select>


<!-- 출고 LOT 상세 목록-->
<select id="selectBsnDeliveryLotDetail" parameterType="BsnDeliveryDetailDTO">
SELECT delivery_lot_detail_num, 
       delivery_detail_id, 
       goods_lot_num, 
       delivery_possible_qnt, 
       delivery_qnt,
       goods_consumption_date
FROM
(
SELECT /*+ INDEX_ASC(bsn_delivery_lot_detail PK_BSN_DELIVERY_LOT_DETAIL) */
       ROWNUM rn,
       bdl.delivery_lot_detail_num, 
       bdl.delivery_detail_id, 
       bdl.goods_lot_num, 
       --  여기서 delivery_possible_qnt를 계산
       TRUNC((pwb.warehousing_remaining_quantity)
       - COALESCE((
           SELECT SUM(delivery_qnt) 
           FROM bsn_delivery_lot_detail bdl2
           JOIN bsn_delivery_detail bdd2 ON bdl2.delivery_detail_id = bdd2.delivery_detail_id
           JOIN bsn_delivery bd2 ON bdd2.delivery_id = bd2.delivery_id
           WHERE bdl2.goods_lot_num = bdl.goods_lot_num
           AND bd2.delivery_status = 'DS01'
           <![CDATA[
           AND bdl2.delivery_detail_id < #{deliveryDetailId}
       )* goods_standard_ratio, 0))/ goods_standard_ratio AS delivery_possible_qnt,
       ]]>
       bdl.delivery_qnt,
       pwb.goods_consumption_date
FROM bsn_delivery_lot_detail bdl
LEFT JOIN purchs_warehousing_body pwb ON bdl.goods_lot_num = pwb.goods_lot_num
LEFT JOIN bsn_delivery_detail bdd ON bdl.delivery_detail_id = bdd.delivery_detail_id
LEFT JOIN bsn_order_detail bod ON bdd.order_detail_id = bod.order_detail_id
LEFT JOIN (
    SELECT order_detail_id,
           REGEXP_SUBSTR(goods_standard, '\d+', 2, 1) / REGEXP_SUBSTR(goods_standard, '\d+', 1, 1) AS goods_standard_ratio
    FROM bsn_order_detail
) ratio_table ON bod.order_detail_id = ratio_table.order_detail_id
WHERE bdl.delivery_detail_id = #{deliveryDetailId}
)
WHERE RN BETWEEN #{start} AND #{end}
</select>
<!-- 출고 LOT 상세 목록 수량-->
<select id="getCountBsnDeliveryLotDetail" parameterType="BsnDeliveryDetailDTO">
SELECT COUNT(delivery_lot_detail_num)
FROM bsn_delivery_lot_detail
WHERE delivery_detail_id = #{deliveryDetailId}
</select>

<!-- 검색조건 -->
<sql id="searchInfoBsnDLV">
	 
	<if test="deteOption != null and deteOption == 'orderDate' and  startDate != null">
		AND order_date >= #{startDate}
	</if>
	<if test="deteOption != null and deteOption == 'orderDate' and  endDate != null">
		<![CDATA[
		AND order_date <= #{endDate}
		]]>
	</if>
	
	<if test="deteOption != null and deteOption =='dueDate' and  startDate != null">
		AND due_date >= #{startDate}
	</if>
	<if test="deteOption != null and deteOption == 'dueDate' and  endDate != null">
		<![CDATA[
		AND due_date <= #{endDate}
		]]>
	</if>
	<if test="statusList != null and !statusList.isEmpty()">
		AND delivery_status IN
		<foreach item="status" collection="statusList" open="(" separator="," close=")">
       		#{status}
    	</foreach>
	</if>
	
	
	
	
	<if test="branch != null and ! branch.equals('all')">
			AND branch_office_id Like '%' || #{branch} || '%'
	</if>
</sql>

<!-- 창고 LOT별 조회(임시) -->
<select id="selectGoodsWarehouseLot" parameterType="BsnDeliveryDetailDTO">
SELECT warehousing_body_num, 
       option_num, 
       option_code, 
       goods_lot_num, 
       warehousing_remaining_quantity,
       goods_consumption_date
FROM
(
SELECT ROW_NUMBER() OVER (
              ORDER BY pwb.goods_consumption_date ASC
       ) AS RN, 
       pwb.warehousing_body_num,
       pwb.option_num,
       po.option_code,
       pwb.goods_lot_num,

       -- 남은 박스 개수 계산 (출고대기 수량 반영)
       TRUNC(
           (pwb.warehousing_remaining_quantity - COALESCE((
               SELECT SUM(bdl.delivery_qnt * 
                         (REGEXP_SUBSTR(bdd.goods_standard, '\d+', 2, 1) 
                          / REGEXP_SUBSTR(bdd.goods_standard, '\d+', 1, 1))) 
               FROM BSN_DELIVERY_LOT_DETAIL bdl
               JOIN BSN_DELIVERY_DETAIL bdd ON bdl.delivery_detail_id = bdd.delivery_detail_id
               JOIN BSN_DELIVERY bd ON bdd.delivery_id = bd.delivery_id
               WHERE bdl.goods_lot_num = pwb.goods_lot_num
                 AND bd.delivery_status = 'DS01'
           ), 0))
           / 
           (SELECT REGEXP_SUBSTR(bdd.goods_standard, '\d+', 2, 1) 
                   / REGEXP_SUBSTR(bdd.goods_standard, '\d+', 1, 1) 
            FROM BSN_DELIVERY_DETAIL bdd
            WHERE delivery_detail_id = #{deliveryDetailId})
       ) AS warehousing_remaining_quantity,  -- 별칭 추가

       pwb.goods_consumption_date
       
FROM purchs_warehousing_body pwb
LEFT JOIN purchse_option po ON pwb.option_num = po.option_num
WHERE pwb.company_num = #{companyNum}
  AND po.option_code = #{optionCode}
  AND warehousing_remaining_quantity > 0
  AND NOT EXISTS (
      SELECT 1 
      FROM BSN_DELIVERY_LOT_DETAIL bdl
      WHERE bdl.goods_lot_num = pwb.goods_lot_num
        AND bdl.delivery_detail_id = #{deliveryDetailId}
  )
ORDER BY pwb.goods_consumption_date ASC
)
WHERE RN BETWEEN #{start} AND #{end}

</select>
<!-- 창고 LOT별 조회 카운팅 -->
<select id="getCountGoodsWarehouseLot" parameterType="BsnDeliveryDetailDTO">
SELECT COUNT(warehousing_body_num)
FROM purchs_warehousing_body pwb
WHERE pwb.company_num = #{companyNum}
  AND pwb.warehousing_remaining_quantity > 0
  AND EXISTS (
      SELECT 1 
      FROM purchse_option po 
      WHERE po.option_num = pwb.option_num
        AND po.option_code = #{optionCode}
  )
  AND NOT EXISTS (
      SELECT 1 
      FROM BSN_DELIVERY_LOT_DETAIL bdl
      WHERE bdl.goods_lot_num = pwb.goods_lot_num
        AND bdl.delivery_detail_id = #{deliveryDetailId}
  )
</select>


<insert id="insertBsnDeliveryLotDetail" statementType="CALLABLE">
call Bsn_Dlv_Lot_Register( 
       #{deliveryDetailId},
       #{lotDetails, typeHandler=com.beauty1nside.bsn.BsnDeliDtlArrayTypeHandler}  
) 
</insert>

<update id="updateBsnDeliveryLotDetail" statementType="CALLABLE">
call BSN_DLV_LOT_MODIFY( 
       #{deliveryDetailId},
       #{lotDetails, typeHandler=com.beauty1nside.bsn.BsnDeliDtlArrayTypeHandler}  
) 
</update>

<delete id="deleteBsnDeliveryLotDetail" statementType="CALLABLE">
call BSN_DLV_LOT_REMOVE(
       #{deliveryDetailId},
       #{lotDetails, typeHandler=com.beauty1nside.bsn.BsnDeliDtlArrayTypeHandler}
)
</delete>

<update id="confirmBsnDelivery" statementType="CALLABLE">
CALL BSN_DELIVERY_CONFIRM(#{deliveryId})
</update>

</mapper>