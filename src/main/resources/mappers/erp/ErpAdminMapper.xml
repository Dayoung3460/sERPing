<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- =======================================================
	* ERP회사 데이터를 CURD 처리한다
	* @author ERP 관리자 개발팀 표하연
	* @since 2025.02.12
	* @version 1.0
	* @see
	*
	* <pre>
	* << 개정이력(Modification Information) >>
	*
	*   수정일      수정자          수정내용
	*  ======    =======    ==============================
	*  2025.02.12  표하연          최초생성
	*  2025.02.13  표하연          회사영문코드 중복처리
	*  2025.02.14  표하연          회사신규등록(회사,cs,최고관리자,구독정보목록생성)
	*  2025.02.15  표하연          회사정보수정 및 기본cs를 등록한다
	*  2025.02.25  표하연          회사의 구독현황을 조회한다 [ServiceReturnDTO]
	*  2025.02.28  표하연          불특정 다수의 문의를 crud 한다
	*
	*  </pre>
======================================================== -->
<mapper namespace="com.beauty1nside.erp.mapper.ErpAdminMapper">

	<!-- 
     * DB연결 확인을 위하여 샘플 데이터를 조회
     *
     * @return testDTO
	-->
	<select id="test" resultType="testDTO">
		select test_name, test_age from test
	</select>
	
	<!-- 
     * 신규회사 등록시 회사 코드 중복 확인
     *
     * @param String
     * @return int
	-->
	<select id="comenname" resultType="int">
		select
		    count(*)
		from erp_company
		where COMPANY_ENG_NAME = #{companyEngName}
	</select>
	
	<!-- 
     * ERP 사용 회사 전체 리스트를 조회한다
     *
     * @param ErpSearchDTO
     * @return List<CompanyListDTO>
	-->
	<select id="companyList" resultType="CompanyListDTO">
		SELECT *
		FROM (
		    SELECT A.*, ROWNUM RN
		    FROM (
				SELECT
				    c.COMPANY_NUM,
				    c.COMPANY_NAME,
				    c.COMPANY_ENG_NAME,
				    c.REPRESENTATION_NAME,
				    c.REPRESENTATION_PHONE,
				    c.CHARGER_NAME,
				    c.CHARGER_PHONE,
				    c.CHARGER_EMAIL,
				    c.COMPANY_ADDRESS,
				    c.BUSINESS_NUM,
				    c.BUSINESS_LICENSE,
				    c.SERVICE_STATE,
				    c.REGISTER_DATE,
				    d.contract_num,
				    l.subscription_num,
				    l.subscription_end_date,
				    l.subscription_form
				from erp_company c
				left join erp_contract_document d
				    on c.company_num = d.company_num
				left join erp_subscription_info_list l
				    on c.company_num = l.company_num
				    and l.subscription_name_num in (1, 6)
				    
				<where>
					<include refid="searchInfo"></include>
				</where>    
				    
				order by c.COMPANY_NUM DESC
				) A
			<![CDATA[
		     WHERE ROWNUM <= #{end}
		    ]]>
	    )
	    <![CDATA[
			WHERE RN >= #{start}
		]]>
	</select>
	
	<!-- 
     * ERP 사용 회사 전체 리스트의 갯수를 구한다
     *
     * @param ErpSearchDTO
     * @return int
	-->
	<select id="getCount" resultType="int">
	  select 
		    count(*)
		from erp_company c
		left join erp_contract_document d
		    on c.company_num = d.company_num
		left join erp_subscription_info_list l
		    on c.company_num = l.company_num
		    and l.subscription_name_num in (1, 6)
		<where>
			<include refid="searchInfo"></include>
		</where>
	</select>
	
	<!-- 
     * ErpSearchDTO 가 상속하고 있는 ErpSearchListDTO의 값으로 검색을 한다
     * companyList(전체조회) / getCount(현재갯수조회) 에 사용
     *
	-->
	<sql id="searchInfo">
	    <if test="companyName != null and companyName != ''">
	        AND c.company_name Like '%' || #{companyName} || '%'
	    </if>
	    <if test="contact != null and (contact == 1 or contact == 2)">
	        AND d.contract_num 
	        <choose>
	        	<when test="contact == 1">is not null</when>
	            <when test="contact == 2">is NULL</when>
	        </choose>
	    </if>
	    <if test="service != null and (service == 1 or service == 2)">
	        AND c.service_state = 
	        <choose>
	            <when test="service == 1">'EC01'</when>
	            <when test="service == 2">'EC03'</when>
	        </choose>
	    </if>
	    <if test="subform != null and (subform == 1 or subform == 2)">
	        AND l.subscription_form = 
	        <choose>
	            <when test="subform == 1">'EL01'</when>
	            <when test="subform == 2">'EL02'</when>
	        </choose>
	    </if>
	    <if test="lastday">
		    AND l.subscription_end_date BETWEEN #{startday} AND #{endday}
		</if>
	</sql>

	
	<!-- 
     * ERP 신규회사 정보를 등록한다
     *
     * @param ComDTO
     * @return int
	-->
	<insert id="insertCompany" parameterType="ComDTO">
	INSERT INTO erp_company VALUES 
	(
		erp_cmpny_seq.nextval, 
		#{companyName}, 
		#{companyEngName}, 
		#{representationName}, 
		#{representationPhone}, 
	 	#{chargerName}, 
	 	#{chargerPhone}, 
	 	#{chargerEmail}, 
	 	#{companyAddress}, 
	 	#{businessNum}, 
	 	#{businessLicense}, 
	 	DEFAULT, 
	 	DEFAULT
	 )
	</insert>
	
	<!-- 
     * ERP 신규회사 최고관리자 계정을 등록한다
     *
     * @param ComDTO
     * @return int
	-->
	<insert id="insertuseraccount" parameterType="ComDTO">
		INSERT INTO erp_user_accounts VALUES
		( 
			erp_account_seq.nextval, 
			#{companyNum}, 
			#{companyEngName}, 
			#{companyAddress}, 
			DEFAULT, 
			DEFAULT, 
			DEFAULT,
			erp_account_emp_seq.nextval
		)
	</insert>
	
	<!-- 
     * ERP 신규회사의 구독기간 서비스
     *
     * @param int
     * @return int
	-->
	<insert id="insertservice" parameterType="int">
		INSERT INTO erp_subscription_info_list VALUES
		( 
			erp_subscrpt_info_seq.nextval, 
			#{companyNum}, 
			DEFAULT, 
			1, 
			27, 
			sysdate+10, 
			sysdate,
			null,
			null
		)
	</insert>
	
	<!-- 
     * ERP 사용회사의 CS내역을 남긴다
     *
     * @param CustomerServiceDTO
     * @return int
	-->
	<insert id="insertNewCS" parameterType="CustomerServiceDTO">
		INSERT INTO erp_customer_service VALUES
		( 
			erp_cs_seq.nextval, 
			#{companyNum}, 
			#{employeeNum}, 
			#{customerServiceDivision}, 
			#{customerServiceContent}, 
			DEFAULT 
		)
	</insert>
	
	<!-- 
     * ERP 사용회사의 서비스 기간을 변경한다 (특정 서비스만)
     *
     * @param map
     * @return int
	-->
	<update id="updateServiceInfo" parameterType="map">
		UPDATE erp_subscription_info_list
	    <set>
	    	subscription_update_date = sysdate,
	        <if test="subscriptionEndDate != null and ! subscriptionEndDate.equals('')">
	            subscription_end_date = to_date(#{subscriptionEndDate},'yyyy-mm-dd'),
	        </if>
	    </set>
	    WHERE subscription_num = #{subscriptionNum}
	</update>
	
	<!-- 
     * ERP 사용회사의 서비스 기간을 변경한다 (모든 서비스)
     *
     * @param map
     * @return int
	-->
	<update id="allUpdateServiceInfo" parameterType="map">
		UPDATE erp_subscription_info_list
	    <set>
	    	subscription_update_date = sysdate,
	        <if test="subscriptionEndDate != null and ! subscriptionEndDate.equals('')">
	            subscription_end_date = to_date(#{subscriptionEndDate},'yyyy-mm-dd'),
	        </if>
	    </set>
	    WHERE company_num = #{companyNum}
	</update>
	
	<!-- 
     * ERP 사용회사 그룹웨서 서비스를 초기화 시킨다
     *
     * @param map
     * @return int
	-->
	<update id="gropServiceUpdate" parameterType="map">
		UPDATE erp_subscription_info_list
	    <set>
	    	subscription_update_date = sysdate,
	        SUBSCRIPTION_NAME_NUM = 2,
	        SUBSCRIPTION_OPTION_NUM = 5
	    </set>
	    WHERE company_num = #{companyNum}
	    and SUBSCRIPTION_NAME_NUM in ( 2, 7 )
	</update>
	
	<!-- 
     * ERP 사용회사 기본서비스 제외 모든구독을 삭제 시킴
     *
     * @param map
     * @return int
	-->
	<delete id="ServiceDelete" parameterType="map">
		delete from erp_subscription_info_list
	    WHERE company_num = #{companyNum}
	    AND SUBSCRIPTION_NAME_NUM NOT IN (1, 6)
	</delete>
	
	
	<!-- 
     * ERP 사용회사 성보를 변경한다
     *
     * @param map
     * @return int
	-->
	<update id="updateCompnayInfo" parameterType="ComDTO">
		UPDATE erp_company
	    <set>
	        <if test="companyName != null and ! companyName.equals('')">
	            company_name = #{companyName},
	        </if>
	        <if test="companyEngName != null and ! companyEngName.equals('')">
	            company_eng_name = #{companyEngName},
	        </if>
	        <if test="representationName != null and ! representationName.equals('')">
	            representation_name = #{representationName},
	        </if>
	        <if test="representationPhone != null and ! representationPhone.equals('')">
	            representation_phone = #{representationPhone},
	        </if>
	        <if test="chargerName != null and ! chargerName.equals('')">
	            charger_name = #{chargerName},
	        </if>
	        <if test="chargerPhone != null and ! chargerPhone.equals('')">
	            charger_phone = #{chargerPhone},
	        </if>
	        <if test="chargerEmail != null and ! chargerEmail.equals('')">
	            charger_email = #{chargerEmail},
	        </if>
	        <if test="companyAddress != null and ! companyAddress.equals('')">
	            company_address = #{companyAddress},
	        </if>
	        <if test="businessNum != null and ! businessNum.equals('')">
	            business_num = #{businessNum},
	        </if>
	        <if test="businessLicense != null and ! businessLicense.equals('')">
	            business_license = #{businessLicense},
	        </if>
	        <if test="serviceState != null and ! serviceState.equals('')">
	            service_state = #{serviceState},
	        </if>
	    </set>
	    WHERE company_num = #{companyNum}
	</update>
	
	
	<!-- 
     * ERP 사용회사 정보를 상황에 맞게 등록 또는 업데이트 한다
     *
     * @param ComDTO
     * @return int
	-->
	<update id="upsertCompanyInfo" parameterType="ComDTO">
	    MERGE INTO erp_company target
	    USING (SELECT #{companyNum} AS company_num FROM DUAL) source
	    ON (target.company_num = source.company_num)
	    WHEN MATCHED THEN
	        UPDATE SET 
	            company_name = #{companyName},
	            company_eng_name = #{companyEngName},
	            representation_name = #{representationName},
	            representation_phone = #{representationPhone},
	            charger_name = #{chargerName},
	            charger_phone = #{chargerPhone},
	            charger_email = #{chargerEmail},
	            company_address = #{companyAddress},
	            business_num = #{businessNum},
	            business_license = #{businessLicense},
	            service_state = #{serviceState}
	    WHEN NOT MATCHED THEN
	        INSERT (company_num, company_name, company_eng_name, representation_name,
	                representation_phone, charger_name, charger_phone, charger_email,
	                company_address, business_num, business_license, service_state, register_date)
	        VALUES (#{companyNum}, #{companyName}, #{companyEngName}, #{representationName},
	                #{representationPhone}, #{chargerName}, #{chargerPhone}, #{chargerEmail},
	                #{companyAddress}, #{businessNum}, #{businessLicense}, #{serviceState}, SYSDATE)
	</update>
	
	<!-- 
     * ERP 사용회사의 비밀번호를 초기화 한다
     *
     * @param int
     * @param String
     * @return int
	-->
	<update id="pwReSet">
		UPDATE erp_user_accounts
	    <set>
	    	update_date = sysdate,
	        <if test="employeePw != null and ! employeePw.equals('')">
	            employee_pw = #{employeePw},
	        </if>
	    </set>
	    WHERE company_num = #{companyNum}
	</update>

	<!-- 
     * ERP 사용회사의 cslist를 조회한다
     *
     * @param int
     * @return CustomerServiceDTO
	-->
	<select id="csList" resultType="CustomerServiceDTO">
		select customer_service_num,
		        company_num,
		        erp_employee_name(employee_num) as employee_name,
		        fn_get_cmmn_name(customer_service_division) as customer_service_division,
		        customer_service_content,
		        customer_service_date
		from erp_customer_service
				where company_num = #{companyNum}
		order by customer_service_num desc
	</select>
	
	<!-- 
     * ERP 사용회사 처리된 구독 정보를 조회한다
     *
     * @param int
     * @return List<ServiceReturnDTO>
	-->
	<select id="serviceReturninfo" resultType="ServiceReturnDTO">
		select 
		    e.subscription_name_num,
		    n.subscription_name,
		    e.subscription_option_num,
		    o.subscription_option,
		    fn_get_cmmn_name(e.subscription_form) as subscription_form,
		    TRUNC(e.subscription_end_date - sysdate) as limit_day,
		    e.subscription_end_date
		from erp_subscription_info_list e
		left join erp_subscription_name n
		on e.subscription_name_num = n.subscription_name_num
		left join erp_subscription_option o
		on e.subscription_option_num = o.subscription_option_num
		where company_num = #{companyNum}
	</select>

	<!-- 
     * 불특정 다수의 문의를 수집한다
     *
     * @param CustomerServiceDTO
     * @return int
	-->
	<insert id="insertNewQuery" parameterType="ContactRequestDTO">
		INSERT INTO erp_inquiry VALUES
		( 
			erp_inqry_seq.nextval, 
			#{companyName}, 
			#{chargerName}, 
			#{chargerPhone},
			#{chargerEmail}, 
			#{inquiryContent}, 
			DEFAULT 
		)
	</insert>
	
	<!-- 
     * 불특정 다수의 문의를 조회한다
     *
     * @param ErpSearchDTO
     * @return int
	-->
	<select id="usecslist" resultType="ErpInquiryDTO">
	SELECT *
		FROM (
		    SELECT A.*, ROWNUM RN
		    FROM (
				select 
				    inquiry_num,
				    company_name,
				    charger_name,
				    charger_phone,
				    charger_email,
				    inquiry_content,
				    inquiry_date,
				    (
				        select count(*)
				        from erp_answer
				        where inquiry_num = i.inquiry_num
				    ) as cnt_inquiry
				from erp_inquiry i
				<where>
					<include refid="okquery"></include>
				</where> 
				order by i.inquiry_date DESC
				) A
			<![CDATA[
		     WHERE ROWNUM <= #{end}
		    ]]>
	    )
	    <![CDATA[
			WHERE RN >= #{start}
		]]>	
	</select>
	
	<!-- 
     * 불특정 다수의 문의를 조회한다
     *
     * @param ErpSearchDTO
     * @return int
	-->
	<select id="usecslistcount">
		select 
		    count(*)
		from erp_inquiry i
		<where>
			<include refid="okquery"></include>
		</where> 
	</select>
	
	
	<!-- 
     * usecslist(문의전체조회) / usecslistcount(문의전체갯수조회) 에 사용
     *
     *
	-->
	<sql id="okquery">
	    <if test="okcunt != null and okcunt != ''">
	        (
		        select count(*)
		        from erp_answer
		        where inquiry_num = i.inquiry_num
		    ) = 0
	    </if>
	</sql>
	
	<!-- 
     * 불특정 다수의 문의에 대한 답변을 조회한다
     *
     * @param int
     * @return List<ErpAnswerDTO>
	-->
	<select id="requestlist" resultType="ErpAnswerDTO">
		select
		    answer_num,
		    inquiry_num,
		    employee_num,
		    erp_employee_name(employee_num) as employee_name,
		    answer_content,
		    answer_date
		from erp_answer
		where inquiry_num = #{inquiryNum}
		order by answer_date DESC
	</select>
	
	<!-- 
     * 불특정 다수의 문의에 대한 답변을 등록한다
     *
     * @param ErpAnswerDTO
     * @return int
	-->
	<insert id="registerquest" parameterType="ErpAnswerDTO">
		insert into erp_answer
			values (erp_answer_seq.nextval, #{inquiryNum}, #{employeeNum}, #{answerContent}, sysdate)
	</insert>
</mapper>