<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- =======================================================
	* ERP 사용 회사 CRUD 하는 맵퍼
	* @author ERP 관리자 개발팀 표하연
	* @since 2025.02.17
	* @version 1.0
	* @see
	*
	* <pre>
	* << 개정이력(Modification Information) >>
	*
	*   수정일      수정자          수정내용
	*  ======    =======    ==============================
	*  2025.02.17  표하연          최초생성
	*  2025.02.18  표하연          기간결제에 따른 추가처리
	*  2025.02.20  표하연          사용계약서 정보를 CR 한다 // 구독정보 및 상세정보를 read 한다
	*  2025.02.26  표하연          구독 결제한 현금영수증, 세금계산서 데이터를 삽입한다
	*
	*  </pre>
======================================================== -->
<mapper namespace="com.beauty1nside.erp.mapper.ErpUserMapper">

	<!-- 
     * 회사 구독 정보를 내보냄
     *
     * @param int
     * @return erpSubscriptionInfoListDTO
	-->
	<select id="sublist" resultType="erpSubscriptionInfoListDTO">
		select *
		from erp_subscription_info_list
		where company_num = #{companyNum}
	</select>
	
	<!-- 
     * 회사 계약 상태 여부를 내보냄
     *
     * @param int
     * @return erpSubscriptionInfoListDTO
	-->
	<select id="subcontact">
		select count(*)
		from erp_contract_document
		where company_num = #{companyNum}
	</select>
	
	<!-- 
     * 회사 회원 인원수를 내보냄
     *
     * @param int
     * @return int
	-->
	<select id="hrlist">
		select count(*)
		from hr_employee
		where company_num = ${companyNum}
	</select>
	
	<!-- 
     * 구독목록(결제헤더)를 등록한다 [ 최초등록 ]
     *
     * @param map
     * @return int
	-->
	<insert id="prosubscriptionlist" parameterType="map">
		INSERT INTO erp_subscription_list VALUES
		(erp_subscrpt_seq.nextval, #{companyNum}, #{employeeNum}, DEFAULT, #{paymethod}, null, #{price}, 'ES04', sysdate)
	</insert>
	
	
	<!-- 
     * 구독목록(결제헤더)의 마지막 결제 기본키를 가져온다
     *
     * @param map
     * @return int
	-->
	<select id="lastpaykey" resultType="int" parameterType="map">
		SELECT subscription_num 
		FROM (
		    select subscription_num
		    from erp_subscription_list
		    where state = 'ES04'
		    and company_num = #{companyNum}
		    and employee_num = #{employeeNum}
		    and subscription_mean = #{paymethod}
		    and subscription_amount = #{price}
		    order by subscription_num desc
		) 
		WHERE ROWNUM = 1
	</select>
	
	<!-- 
     * 구독목록 결제 옵션 정보를 저장한다
     *
     * @param int
     * @param int
     * @return int
	-->
	<insert id="prosubscriptiontail">
		INSERT INTO erp_subscription_tail VALUES
		(erp_subscrpt_tail_seq.nextval, #{subscriptionNum}, #{subscriptionOptionNum}, #{subscriptionPeriod}, #{subscriptionOptionPrice})
	</insert>
	
	<!-- 
     * 구독 옵션 정보를 가져온다 단일 레코드
     *
     * @param int
     * @return ErpSubOptionDTO
	-->
	<select id="lastoptionlist" resultType="ErpSubOptionDTO" >
		select *
		from erp_subscription_option
		where subscription_option_num = ${subscriptionOptionNum}
	</select>
	
	<!-- 
     * 회사가 현재 구독중인 정보 확인
     * 위에 동일한거 있는데 쿼리랑 파라미터 수정할 시간에 한페이지라도 더나가려고
     * 졸업후 작업으로 놔둠
     *
     * @param int
     * @param int
     * @param int
     * @return erpSubscriptionInfoListDTO
	-->
	<select id="subinfo" resultType="erpSubscriptionInfoListDTO">
		select *
		from erp_subscription_info_list
		where company_num = #{companyNum}
		and subscription_name_num in ( #{subnamenum1}, #{subnamenum2} )
	</select>
	
	<!-- 
     * 구독정보를 업데이트 한다 (기간구독)
     *
     * @param erpSubscriptionInfoListDTO
     * @return int
	-->
	<update id="prosubupdate" parameterType="erpSubscriptionInfoListDTO">
		update erp_subscription_info_list
		<set>
	    	subscription_update_date = sysdate,
	        subscription_end_date = #{subscriptionEndDate},
	        subscription_option_num = #{subscriptionOptionNum},
	        subscription_name_num = #{subscriptionNameNum},
	        subscription_form = #{subscriptionForm},
	    </set>
	    WHERE subscription_num = #{subscriptionNum}
	</update>
	
	<!-- 
     * 구독정보를 인서트 한다 (기간구독)
     *
     * @param erpSubscriptionInfoListDTO
     * @return int
	-->
	<insert id="prosubinsert" parameterType="erpSubscriptionInfoListDTO">
		INSERT INTO erp_subscription_info_list VALUES
		( 
			erp_subscrpt_info_seq.nextval, 
			#{companyNum}, 
			DEFAULT, 
			#{subscriptionNameNum}, 
			#{subscriptionOptionNum}, 
			#{subscriptionEndDate}, 
			sysdate
		)
	</insert>
	
	<!-- 
     * 그룹웨어 옵션 정보를 불러온다
     *
     * @param int
     * @return int
	-->
	<select id="gpoptioninfo">
		SELECT CASE 
		           WHEN COUNT(*) = 0 THEN 50
		           ELSE MAX(subscription_period)
		       END AS subscription_period
		FROM erp_subscription_info_list s
		LEFT JOIN erp_subscription_option o
		    ON s.subscription_option_num = o.subscription_option_num
		WHERE s.subscription_name_num IN (2,7)
		AND s.company_num = #{companyNum}
	</select>
	
	<!-- 
     * 사용계약서를 등록한다
     *
     * @param ContractDTO
     * @return int
	-->
	<insert id="insertcontract" parameterType="ContractDTO">
		INSERT INTO erp_contract_document
        (
            contract_num, company_num, erp_contract_document, erp_register_date,
			contract1, contract2, contract3, contract4, contract5, contract6, contract7,
			contract8, contract9, contract10, contract11, contract12, contract13, contract14, 
			contract15, contract16, contract17, contract18, contract19, contract20, contract21,
			contract22, contract23, contract24, contract25, contract26, contract27, contract28,
			contract29, contract30
        )
        VALUES
        (
            erp_ctrtc_seq.nextval, #{companyNum}, #{erpContractDocument}, DEFAULT,
            #{contract1}, #{contract2}, #{contract3}, #{contract4}, #{contract5}, #{contract6}, #{contract7},
            #{contract8}, #{contract9}, #{contract10}, #{contract11}, #{contract12}, #{contract13}, #{contract14}, 
            #{contract15}, #{contract16}, #{contract17}, #{contract18}, #{contract19}, #{contract20}, #{contract21},
            #{contract22}, #{contract23}, #{contract24}, #{contract25}, #{contract26}, #{contract27}, #{contract28},
            #{contract29}, #{contract30}
        )
	</insert>
	
	<!-- 
     * 사용계약서 정보를 불러온다
     *
     * @param int
     * @return ContractDTO
	-->
	<select id="readcontract" resultType="ContractDTO">
		select *
		from erp_contract_document
		where COMPANY_NUM = #{compnayNum}
	</select>
	
	<!-- 
     * 구독내역을 조회한다
     *
     * @param int
     * @return SubScriptionDTO
	-->
	<select id="subscriptionlist" resultType="SubScriptionDTO">
		SELECT *
		FROM (
		    SELECT A.*, ROWNUM RN
		    FROM (
				select 
				    e.subscription_num,
				    e.company_num,
				    erp_employee_name(e.company_num) as company_name,
				    e.employee_num,
				    e.subscription_form,
				    fn_get_cmmn_name(e.subscription_form) as subscription_form_name,
				    e.subscription_mean,
				    fn_get_cmmn_name(e.subscription_mean) as subscription_mean_name,
				    e.subscription_amount,
				    e.state,
				    fn_get_cmmn_name(e.state) as state_name,
				    e.subscription_date,
                    b.bill_num,
                    b.bill_form,
                    fn_get_cmmn_name(b.bill_form) as bill_form_name,
                    b.pdf_address,
                    b.issue_company,
                    fn_get_cmmn_name(b.issue_company) as issue_company_name,
                    b.issue_date
				from erp_subscription_list e
                left join erp_bill b
                    on e.subscription_num = b.subscription_num
				where company_num = #{companyNum}
				order by subscription_date DESC
		) A
			<![CDATA[
		     WHERE ROWNUM <= #{end}
		    ]]>
	    )
	    <![CDATA[
			WHERE RN >= #{start}
		]]>
	</select>
	
	<!-- 
     * 구독내역의 갯수를 조회한다
     *
     * @param int
     * @return int
	-->
	<select id="subscriptioncount" resultType="int">
		select count(*)
		from erp_subscription_list
		where company_num = #{companyNum}
	</select>
	
	<!-- 
     * 구독리스트의 상세 구독내역을 가져온다
     *
     * @param int
     * @return SubscriptionDetailDTO
	-->
	<select id="subscriptionDetail" resultType="SubscriptionDetailDTO">
		select 
		    e.subscription_tail_num,
		    e.subscription_num,
		    o.subscription_option_num,
		    o.subscription_name_num,
		    o.subscription_option,
		    e.subscription_option_price,
		    o.subscription_discount,
		    e.subscription_period,
		    n.subscription_name
		from erp_subscription_tail e
		left join erp_subscription_option o
		    on e.subscription_option_num = o.subscription_option_num
		left join erp_subscription_name n
		    on o.subscription_name_num = n.subscription_name_num
		where subscription_num = #{subscriptionNum}
	</select>
	
	<!-- 
     * 구독 결제한 현금영수증, 세금계산서 데이터를 삽입한다
     *
     * @param TaxInvoiceDTO
     * @return int
	-->
	<insert id="insertTaxInvoice" parameterType="TaxInvoiceDTO">
        INSERT INTO erp_bill (
            BILL_NUM, SUBSCRIPTION_NUM, EMPLOYEE_NUM, BILL_FORM,
            PDF_ADDRESS, ISSUE_COMPANY, COMPANY_CODE, ISSUE_DATE
        ) VALUES (
            erp_bill_seq.nextval, #{subscriptionNum}, #{employeeNum}, #{billForm},
            #{pdfAddress}, #{issueCompany}, #{companyCode}, sysdate
        )
    </insert>

</mapper>