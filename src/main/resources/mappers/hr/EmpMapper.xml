<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beauty1nside.hr.mapper.EmpMapper">


	<!-- 특정 사원 조회 -->
	<select id="info" resultType="com.beauty1nside.hr.dto.EmpDTO"
		parameterType="Long">
		SELECT
		e.employee_num AS employeeNum,
		e.employee_id AS employeeId,
		e.employee_name AS employeeName,
		e.email AS email,
		e.phone AS phone,
		e.hire_date AS hireDate,
		fn_get_cmmn_name(e.position) AS position,
		fn_get_cmmn_name(e.status) AS status,
		fn_get_cmmn_name(e.employment_type) AS employmentType,
		d.department_name AS departmentName
		FROM hr_employee e
		LEFT JOIN hr_department d ON
		e.department_num = d.department_num
		WHERE e.employee_num =
		#{employee_num}
		ORDER BY e.employee_num DESC
	</select>

	<select id="list" resultType="com.beauty1nside.hr.dto.EmpDTO"
		parameterType="com.beauty1nside.hr.dto.EmpSearchDTO">
		SELECT * FROM (
			SELECT ROWNUM rn, employeeNum, employeeId, employeeName, email, phone,
			hireDate, position, status, employmentType, departmentName
			FROM (
			SELECT
			e.employee_num AS employeeNum,
			e.employee_id AS employeeId,
			e.employee_name AS employeeName,
			e.email AS email,
			e.phone AS phone,
			e.hire_date AS hireDate,
			fn_get_cmmn_name(e.position) AS position,
			fn_get_cmmn_name(e.status) AS status,
			fn_get_cmmn_name(e.employment_type) AS employmentType,
			COALESCE(d.department_name, '부서 없음') AS departmentName
			FROM hr_employee e
		<if test="departmentNum == null ">
			LEFT
		</if>
		JOIN hr_department d ON e.department_num = d.department_num
		<where>
			<include refid="searchInfo"></include>
		</where>
		) 
        <![CDATA[
        WHERE ROWNUM <= #{end} 
         ]]>
		)
		WHERE rn >= #{start}
	</select>
	
	<select id="countForSubDept" parameterType="com.beauty1nside.hr.dto.EmpSearchDTO">
		select count(*)
		from hr_employee e
		    left join hr_department d
		    on e.department_num = d.department_num 
		<where>
		 e.company_num = #{companyNum}    
            <if test="departmentNum != 0">
			    and (e.department_num = #{departmentNum} 
			         or e.department_num in
			         (
			         select department_num
			         from hr_department
			         where parent_department_num = #{departmentNum}    
			         )
			    )
            </if>
		</where>

	</select>
	
	
	
		<select id="listWithSubDept" resultType="com.beauty1nside.hr.dto.EmpDTO" 
	        parameterType="com.beauty1nside.hr.dto.EmpSearchDTO">
		    SELECT * FROM (
		          SELECT ROWNUM rn, a.*
		          FROM (
					SELECT 
						e.employee_num,
						e.employee_id,
						e.employee_name,
						e.email ,
						e.phone ,
						e.hire_date,
						fn_get_cmmn_name(e.position) as position,
						fn_get_cmmn_name(e.authority) as authority,
						fn_get_cmmn_name(e.status) as status,
						e.quit_date,
						e.address,
						e.zip_code,
						fn_get_cmmn_name(e.employment_type) as employmentType,
						e.profile_image,
						e.memo,
						e.company_num,
						c.company_name,
						c.company_eng_name,
						e.department_num,
						e.salary,
						d.department_name,
						d.parent_department_num,
						d.department_type,
						d.manager_num,
						d.department_status
					FROM hr_employee e
						LEFT JOIN hr_department d ON e.department_num = d.department_num 
						LEFT JOIN erp_company c ON e.company_num = c.company_num
					<where>
						 e.company_num = #{companyNum}    
			            <if test="departmentNum != 0">
						    AND (e.department_num = #{departmentNum} 
							         OR e.department_num in (
								         SELECT department_num
								         FROM hr_department
								         WHERE parent_department_num = #{departmentNum}    
			                        	 ) 
	                       	    )
		                 </if>
		             </where>
		             ORDER BY e.employee_num DESC
		             ) a
		                        <![CDATA[
		                        WHERE ROWNUM <= #{end} 
		                         ]]>
		                        )
		                        WHERE rn >= #{start}
		             
			
		</select>
		
	
	
	
	
	<select id="listWithSubDepartment2" resultType="com.beauty1nside.hr.dto.EmpDTO" 
	        parameterType="com.beauty1nside.hr.dto.EmpSearchDTO">
	    SELECT * 
	    FROM (
	        SELECT a.*, ROWNUM rn 
	        FROM (
	            SELECT e.employee_num AS employeeNum,
	                   e.employee_id  AS employeeId,
	                   e.employee_name AS employeeName,
	                   e.email,
	                   fn_get_cmmn_name(e.position) AS position, 
	                   d.department_name AS departmentName,
	                   e.department_num AS departmentNum,
	                   COUNT(*) OVER() AS totalEmployeeCount  -- ✅ 전체 직원 수 추가
	            FROM hr_employee e
	            JOIN hr_department d ON e.department_num = d.department_num
	            <where>
	                <!-- ✅ 회사 번호 조건 -->
	                <if test="companyNum != null">
	                    AND e.company_num = #{companyNum}
	                </if>
	                <!-- ✅ 부서 번호 조건 (하위 부서 포함) -->
	                <if test="departmentNum != null">
	                    AND (
	                        e.department_num = #{departmentNum}
	                        OR e.department_num IN (
	                            SELECT department_num
	                            FROM hr_department
	                            WHERE parent_department_num = #{departmentNum}
	                        )
	                    )
	                </if>
	            </where>
	            ORDER BY e.employee_num DESC  -- ✅ ORDER BY는 ROWNUM 필터링 전에 위치해야 함
	        ) a 
	        <![CDATA[
	        WHERE ROWNUM <= #{end}
	        ]]>
	    ) 
	    WHERE rn >= #{start}  -- ✅ 최종적으로 시작 번호 필터링
	</select>


	<select id="count"
		parameterType="com.beauty1nside.accnut.dto.AssetSearchDTO">
		SELECT COUNT(employee_num)
		FROM hr_employee e
		LEFT JOIN hr_department d
		ON e.department_num = d.department_num

		<where>
			<include refid="searchInfo"></include>
		</where>
	</select>


	<sql id="searchInfo">
	    <if test="searchKeyword != null and searchKeyword != ''">
	        <choose>
	            <when test="searchType == '전체'">
	                AND (
	                    e.employee_name LIKE '%' || #{searchKeyword} || '%' 
	                    OR e.employee_id LIKE '%' || #{searchKeyword} || '%'
	                    OR e.phone LIKE '%' || #{searchKeyword} || '%'
	                )
	            </when>
	            <when test="searchType == 'employeeName'">
	                AND e.employee_name LIKE '%' || #{searchKeyword} || '%'
	            </when>
	            <when test="searchType == 'employeeId'">
	                AND e.employee_id LIKE '%' || #{searchKeyword} || '%'
	            </when>
	            <when test="searchType == 'phone'">
	                AND e.phone LIKE '%' || #{searchKeyword} || '%'
	            </when>
	        </choose>
	    </if>
	
	    <if test="departmentNum != null and departmentNum != ''">
	        AND (d.department_num = #{departmentNum}
	        OR d.parent_department_num = #{departmentNum})
	    </if>
	
	    <if test="subDepartmentNum != null and subDepartmentNum != ''">
	        AND d.department_num = #{subDepartmentNum}
	    </if>
	
	    <if test="position != null and position != ''">
	        AND e.position = #{position}
	    </if>
	
	    <if test="status != null and status != ''">
	        AND e.status = fn_get_cmmn_code_ver2(#{status}, '재직 상태')
	    </if>
	
	    <if test="employmentType != null and employmentType != ''">
	        AND e.employment_type = #{employmentType}
	    </if>
	</sql>


	<!-- 부서 목록 조회 -->
	<select id="getDepartments" resultType="map">
		SELECT department_num as department_num,
		department_name as department_name,
		NVL(parent_department_num, 0) AS parent_department_num
		FROM hr_department
		ORDER BY parent_department_num, department_name
	</select>
	
	<!-- ✅ 새로 추가: 부서번호 + 부서이름 포함된 전체 부서 목록 조회 -->
	<select id="getDepartmentList" resultType="map">
	    SELECT department_num AS departmentNum,
	           department_name AS departmentName
	    FROM hr_department
	    ORDER BY departmentNum
	</select>

	<!-- ✅ 하위 부서 목록 조회 추가 -->
	<select id="getSubDepartments" resultType="map" parameterType="string">
	    SELECT department_num AS subDepartmentNum,
	           department_name AS subDepartmentName
	    FROM hr_department
	    WHERE parent_department_num = #{departmentNum}
	    ORDER BY department_num
	</select>

	<!-- 직급 목록 조회 -->
	<select id="getPositions" resultType="map">
		SELECT DISTINCT c.cmmn_code AS cmmnCode, c.cmmn_name AS cmmnName
		FROM cmmn c
		WHERE c.upper_cmmn_code = 'PO'
		ORDER BY c.cmmn_code
	</select>

	<!-- 근무 유형 목록 조회 (정규직,계약직)-->
	<select id="getEmploymentTypes" resultType="map">
	    SELECT DISTINCT 
	        c.cmmn_code AS cmmnCode, 
	        c.cmmn_name AS cmmnName
	    FROM cmmn c
	    WHERE c.upper_cmmn_code = 'ET'
	
	    UNION
	
	    SELECT DISTINCT 
	        e.employment_type AS cmmnCode, 
	        fn_get_cmmn_name(e.employment_type) AS cmmnName
	    FROM hr_employee e
	    WHERE e.employment_type IS NOT NULL
	
	    ORDER BY 1
	</select>


	<!-- 재직 상태 목록 조회 (재직,퇴직,휴직)-->
	<select id="getStatuses" resultType="string">
		SELECT DISTINCT c.cmmn_name
		FROM cmmn c
		WHERE c.upper_cmmn_code = 'ST'

		UNION

		SELECT DISTINCT fn_get_cmmn_name(e.status)
		FROM hr_employee e
		WHERE e.status IS NOT NULL

		ORDER BY 1
	</select>
	
	<insert id="insertEmployee" parameterType="com.beauty1nside.hr.dto.EmpDTO">
	    INSERT INTO hr_employee (
	        employee_num, employee_id, employee_pw, employee_name, email, phone, hire_date, 
	        position, authority, status, employment_type, department_num, salary, bank_name, 
	        account_num, register_date, ssn, address, zip_code, memo, company_num
	    ) VALUES (
	        HR_EMPLOYEE_SEQ.NEXTVAL, #{employeeId}, #{employeePw}, #{employeeName}, #{email}, #{phone}, #{hireDate},
	        #{position}, #{authority}, #{status}, #{employmentType}, #{departmentNum}, #{salary}, #{bankName},
	        #{accountNum}, SYSDATE, #{ssn}, #{address}, #{zipCode}, #{memo}, #{companyNum}
	    )
	</insert>

	
	<select id="getMaxEmployeeId" resultType="string">
	    SELECT COALESCE(MAX(TO_NUMBER(SUBSTR(employee_id, 7, 3))), 0) 
	    FROM hr_employee 
	    WHERE REGEXP_LIKE(employee_id, '^[0-9]{6}[0-9]{3}$') -- 숫자로 된 9자리 employee_id만 선택
	</select>


	<!-- 권한 목록 조회 (최고관리자 AU001,관리자 AU002,지점장 AU003,사원 AU004)-->
	<select id="getAuths" resultType="map">
		SELECT DISTINCT c.cmmn_code AS cmmnCode, c.cmmn_name AS cmmnName
		FROM cmmn c
		WHERE c.upper_cmmn_code = 'AU'
		ORDER BY c.cmmn_code DESC		
	</select>
	
	<select id="checkEmailExists" resultType="int">
	    SELECT COUNT(*) FROM HR_EMPLOYEE WHERE EMAIL = #{email}
	</select>
	
	<!-- 특정 부서의 사원 목록 가져오기 -->
	<select id="listByDept" resultType="com.beauty1nside.hr.dto.EmpDTO"
										 parameterType="com.beauty1nside.hr.dto.EmpSearchDTO">
		
	    SELECT * FROM (
	        SELECT ROWNUM rn, employeeNum, employeeId, employeeName, email, phone,
	        hireDate, position, status, employmentType, departmentName, authority
	        FROM (
	            SELECT
	                e.employee_num AS employeeNum,
	                e.employee_id AS employeeId,
	                e.employee_name AS employeeName,
	                e.email AS email,
	                e.phone AS phone,
	                e.hire_date AS hireDate,
				    fn_get_cmmn_name(e.position) as position, 
				    fn_get_cmmn_name(e.status) as status, 
				    fn_get_cmmn_name(e.authority) as authority,  
				    fn_get_cmmn_name(e.employment_type) as employmentType, 
	                d.department_name AS departmentName
	            FROM hr_employee e
	            LEFT JOIN hr_department d ON e.department_num = d.department_num
	            <where>
	                <if test="departmentNum != null">
	                    AND e.department_num = #{departmentNum}  <!-- 특정 부서 필터 추가 -->
	                </if>
	                <include refid="searchInfo"></include>  <!-- 기존 검색 조건 유지 -->
	            </where>
	        ) 
        <![CDATA[
        WHERE ROWNUM <= #{end} 
         ]]>
	    )
	    WHERE rn >= #{start}
	</select>


</mapper>