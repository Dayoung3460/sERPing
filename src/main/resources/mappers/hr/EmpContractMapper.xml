<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beauty1nside.hr.mapper.EmpContractMapper">

    <!-- 계약 등록 -->
    <insert id="insertContract" parameterType="com.beauty1nside.hr.dto.EmpContractDTO">
        INSERT INTO HR_EMPLOYEE_CONTRACT (
            CONTRACT_NUM, EMPLOYEE_NUM, COMPANY_NUM, DEPARTMENT_NUM, POSITION, CONTRACT_TYPE,
            CONTRACT_START_DATE, CONTRACT_END_DATE, WORK_LOCATION, JOB_DESCRIPTION, 
            WORK_START_TIME, WORK_END_TIME, BREAK_START_TIME, BREAK_END_TIME,
            PROBATION_PERIOD, CONTRACT_STATUS, REGISTER_DATE, UPDATE_DATE, 
            ANNUAL_SALARY, MONTHLY_SALARY, BONUS, ADDITIONAL_PAY, SALARY_PAYMENT_DATE, 
            PAYMENT_METHOD, ANNUAL_LEAVE_POLICY, SOCIAL_INSURANCE, WORK_DAYS
        ) VALUES (
            HR_EMPLOYEE_CONTRACT_SEQ.NEXTVAL, 
            #{employeeNum}, #{companyNum}, #{departmentNum}, #{position}, #{contractType},
            #{contractStartDate, jdbcType=DATE}, #{contractEndDate, jdbcType=DATE}, #{workLocation}, #{jobDescription},
            #{workStartTime}, #{workEndTime}, #{breakStartTime}, #{breakEndTime},
            #{probationPeriod}, 'CS001', SYSDATE, SYSDATE,
            #{annualSalary}, #{monthlySalary}, #{bonus}, #{additionalPay}, #{salaryPaymentDate}, 
            #{paymentMethod}, #{annualLeavePolicy}, #{socialInsurance}, #{workDays} 
        )
    </insert>

    <!-- 특정 사원의 최근 계약 조회 -->
    <select id="getLastContract" parameterType="long" resultType="com.beauty1nside.hr.dto.EmpContractDTO">
        SELECT * FROM HR_EMPLOYEE_CONTRACT 
        WHERE EMPLOYEE_NUM = #{employeeNum}
        ORDER BY REGISTER_DATE DESC
        FETCH FIRST 1 ROWS ONLY
    </select>

    <!-- 전체 계약 목록 조회 -->
    <select id="getAllContracts" resultType="com.beauty1nside.hr.dto.EmpContractDTO">
        SELECT * FROM HR_EMPLOYEE_CONTRACT ORDER BY REGISTER_DATE DESC
    </select>
    
    <select id="getContractData" resultType="map">
    WITH LATEST_CONTRACT AS (
        SELECT 
            CONTRACT_NUM, EMPLOYEE_NUM, COMPANY_NUM, 
            CONTRACT_START_DATE, CONTRACT_END_DATE, 
            WORK_DAYS, MONTHLY_SALARY, PAYMENT_METHOD, JOB_DESCRIPTION,
            ROW_NUMBER() OVER (PARTITION BY EMPLOYEE_NUM ORDER BY CONTRACT_START_DATE DESC) AS RN
        FROM HR_EMPLOYEE_CONTRACT
    )
    SELECT 
        C.COMPANY_NAME, E.EMPLOYEE_NAME,
        TO_CHAR(LC.CONTRACT_START_DATE, 'YYYY-MM-DD') AS CONTRACT_START_DATE,
        TO_CHAR(LC.CONTRACT_END_DATE, 'YYYY-MM-DD') AS CONTRACT_END_DATE,
        NVL(LC.WORK_DAYS, '월~금') AS WORK_DAYS,
        LC.MONTHLY_SALARY, LC.PAYMENT_METHOD, LC.JOB_DESCRIPTION
    FROM LATEST_CONTRACT LC
    JOIN HR_EMPLOYEE E ON LC.EMPLOYEE_NUM = E.EMPLOYEE_NUM
    JOIN ERP_COMPANY C ON LC.COMPANY_NUM = C.COMPANY_NUM
    WHERE LC.RN = 1 
      AND E.EMPLOYEE_NUM = #{employeeNum}
      AND C.COMPANY_NUM = #{companyNum}
</select>


<select id="searchContracts" resultType="com.beauty1nside.hr.dto.EmpContractDTO">
    SELECT * FROM (
        SELECT 
            ROWNUM AS rn, data.*
        FROM (
            SELECT 
                C.CONTRACT_NUM, 
                E.EMPLOYEE_NUM, 
                E.EMPLOYEE_NAME, 
			    COALESCE(D.DEPARTMENT_NAME, '부서 없음') AS departmentName, 
			    COALESCE(PARENT_D.DEPARTMENT_NAME, '상위 부서 없음') AS parentDepartmentName,
                C.POSITION,
                C.CONTRACT_TYPE,

                TO_CHAR(C.CONTRACT_START_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CONTRACT_START_DATE, 
                TO_CHAR(C.CONTRACT_END_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CONTRACT_END_DATE,

                C.WORK_LOCATION,
                C.JOB_DESCRIPTION,
                C.WORK_START_TIME,
                C.WORK_END_TIME,
                C.WORK_HOURS,
                C.WORK_DAYS,
                C.BREAK_START_TIME,
                C.BREAK_END_TIME,
                C.PROBATION_PERIOD,

                C.MONTHLY_SALARY,
                C.ANNUAL_SALARY,
                C.BONUS,
                C.ADDITIONAL_PAY,
                C.SALARY_PAYMENT_DATE,
                C.PAYMENT_METHOD,

                C.ANNUAL_LEAVE_POLICY,
                C.SOCIAL_INSURANCE,

                C.CONTRACT_STATUS,
                C.TERMINATION_REASON

				FROM HR_EMPLOYEE_CONTRACT C
				LEFT JOIN HR_EMPLOYEE E ON C.EMPLOYEE_NUM = E.EMPLOYEE_NUM
				LEFT JOIN HR_DEPARTMENT D ON C.DEPARTMENT_NUM = D.DEPARTMENT_NUM
				LEFT JOIN HR_DEPARTMENT PARENT_D ON D.PARENT_DEPARTMENT_NUM = PARENT_D.DEPARTMENT_NUM
				WHERE C.COMPANY_NUM = #{companyNum}

            <!-- ✅ 검색 조건 추가 -->
            <include refid="searchContractConditions"/>

            ORDER BY C.CONTRACT_START_DATE DESC
        ) data
        <![CDATA[
        WHERE ROWNUM <= #{end} 
        ]]>
    ) 
    <![CDATA[
    WHERE rn >= #{start}  
    ]]>
</select>

<sql id="searchContractConditions">
    <if test="searchKeyword != null and searchKeyword != ''">
        <choose>
            <when test="searchType == 'employeeName'">
                AND E.EMPLOYEE_NAME LIKE '%' || #{searchKeyword} || '%'
            </when>
            <when test="searchType == 'contractType'">
                AND C.CONTRACT_TYPE = #{searchKeyword}
            </when>
            <when test="searchType == 'departmentName'">
                AND D.DEPARTMENT_NAME LIKE '%' || #{searchKeyword} || '%'
            </when>
        </choose>
    </if>

    <if test="contractStatus != null and contractStatus != ''">
        AND C.CONTRACT_STATUS = #{contractStatus}
    </if>

    <if test="startDate != null and startDate != ''">
        AND C.CONTRACT_START_DATE >= TO_DATE(#{startDate}, 'YYYY-MM-DD')
    </if>

    <if test="endDate != null and endDate != ''">
        AND C.CONTRACT_END_DATE <![CDATA[ <= ]]> TO_DATE(#{endDate}, 'YYYY-MM-DD')
    </if>

    <if test="departmentNum != null and departmentNum != ''">
        AND C.DEPARTMENT_NUM IN (
            SELECT department_num 
            FROM hr_department
            WHERE company_num = #{companyNum}
            START WITH department_num = #{departmentNum} 
            CONNECT BY PRIOR department_num = parent_department_num
        )
    </if>
</sql>



<!-- ✅ 계약 개수 조회 -->
<select id="countContracts" resultType="int" parameterType="EmpContractSearchDTO">
    SELECT COUNT(*)
    FROM HR_EMPLOYEE_CONTRACT C
    JOIN HR_EMPLOYEE E ON C.EMPLOYEE_NUM = E.EMPLOYEE_NUM
    JOIN HR_DEPARTMENT D ON C.DEPARTMENT_NUM = D.DEPARTMENT_NUM
    WHERE C.COMPANY_NUM = #{companyNum}
</select>


	
</mapper>