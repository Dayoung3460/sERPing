<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beauty1nside.bhf.mapper.BhfGoodsInMapper">
	
	<!-- 상품입고 등록 프로시저(수량에 따라 재발주 및 반품 자동등록) -->
	<insert id="goodsIn" statementType="CALLABLE">
		call bhf_goods_in(
		  #{branchOfficeId},
		  #{dueDate},
		  #{companyNum},
		  #{deliveryId},
		  #{orderCode},
		  #{files, typeHandler=com.beauty1nside.bhf.GoodsInArrayStructHandler} 
		)
	</insert>
	
	<!-- 주문서 조회 -->
	<select id="goodsOrdList" resultType="BhfGoodsOrdDTO" parameterType="BhfGoodsOrdSearchDTO">
		select  delivery_id, 
	   			order_code, 
	  			delivery_date, 
	   			order_date, 
	   			due_date,
	   			remark
		from ( 	select  rownum rn,
						d.delivery_id,
				        o.order_code,
				        d.delivery_date,
				        o.order_date,
				        o.due_date,
				        d.remark
				from    bsn_delivery d join bsn_order o on d.order_id = o.order_id
		<![CDATA[
				where rownum <= #{end}
		]]>
				and <include refid="searchInfo"></include>
				)
		where rn >= #{start}
	</select>
	
	<!-- 페이징에 전체숫자 알려주기 위해서 -->
	<select id="count" parameterType="BhfGoodsOrdSearchDTO">
		SELECT COUNT(d.delivery_id)
		FROM bsn_delivery d join bsn_order o on d.order_id = o.order_id
		<where>
			<include refid="searchInfo"></include>
		</where>
	</select>
	
	<!-- 검색조건(검색을 안하면 그냥 조회가 되게) -->
	<sql id="searchInfo">
		d.company_num = #{companyNum} AND d.delivery_status = 'DS02' and o.branch_office_id = #{branchOfficeId}
		<if test="orderDate != null and ! orderDate.equals('')">
			AND TO_CHAR(o.order_date, 'yyyy-mm-dd') = #{orderDate}
		</if>
	</sql>
	
	<!-- 주문서 상세조회 -->
	<select id="goodsOrdDtlList" resultType="BhfGoodsOrdDTO" parameterType="BhfGoodsOrdSearchDTO">
		select  goods_code,
				goods_name, 
				option_code, 
				option_name, 
				goods_standard, 
				quantity,
				goods_lot_num,
				option_barcode,
				goods_consumption_date
		from(	select 	rownum rn,
						o.goods_code,
				        o.goods_name,
				        o.option_code,
				        o.option_name,
				        o.goods_standard,
				        o.quantity,
						l.goods_lot_num,
				        d.option_barcode,
				        w.goods_consumption_date
				from    bsn_delivery_detail d 
				join    bsn_order_detail o
				ON      d.order_detail_id = o.order_detail_id
				join    bsn_delivery_lot_detail l
				on      d.delivery_detail_id = l.delivery_detail_id
				join    purchs_warehousing_body w
				on      l.goods_lot_num = w.goods_lot_num
				<![CDATA[
				where rownum <= #{end}
		]]>
				and d.delivery_id = #{deliveryId}
				)
		where rn >= #{start}
	</select>
	
</mapper>